services:
 
  db:
    image: postgres:15-alpine
    container_name: todolist-db
    environment:
      POSTGRES_DB: ${DB_NAME:-todolist}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - todolist-network
    ports:
      - "5432:5432"  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-todolist}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: todolist-backend
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - DB_HOST=db
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-todolist}
      - DB_PORT=5432
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - todolist-network
   
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: todolist-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - todolist-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 64M


  adminer:
    image: adminer
    container_name: todolist-adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - todolist-network
    restart: unless-stopped
    profiles:
      - debug


volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres

networks:
  todolist-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 